plugins {
    id 'java-library'
    id("xyz.jpenilla.run-paper") version "2.3.1"
    id("com.gradleup.shadow") version "9.0.0-beta13"
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'com.gradleup.shadow'

    group = 'dev.mzcy'
    version = '1.0-SNAPSHOT'

    repositories {
        mavenCentral()
        maven {
            name = "papermc-repo"
            url = "https://repo.papermc.io/repository/maven-public/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/groups/public/"
        }
    }

    dependencies {
        compileOnly("io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT")

        compileOnly("org.projectlombok:lombok:1.18.38")
        compileOnly("org.jetbrains:annotations:26.0.2")

        annotationProcessor("org.projectlombok:lombok:1.18.38")
        annotationProcessor("org.jetbrains:annotations:26.0.2")
    }


    def targetJavaVersion = 21
    java {
        def javaVersion = JavaVersion.toVersion(targetJavaVersion)
        sourceCompatibility = javaVersion
        targetCompatibility = javaVersion
        if (JavaVersion.current() < javaVersion) {
            toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
        }
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'

        if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
            options.release.set(targetJavaVersion)
        }
    }

    tasks.register('moveToServerPluginFolder', Copy) {
        // Zielordner auf deinem Minecraft-Server (oder in deinem Fall Localhost)
        def pluginFolder = 'C:/Users/mieth/Desktop/localhost_testing/plugins'  // Hier den richtigen Pfad angeben

        // Das Plugin-JAR nach dem Build verschieben
        from("$buildDir/libs") {
            include "*-all.jar"
            exclude "api-*.jar"
        }
        into(pluginFolder)
    }

    tasks.shadowJar.finalizedBy(tasks.moveToServerPluginFolder)
}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.21.4")
    }
}



processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}
